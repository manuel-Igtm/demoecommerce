pipeline {
    agent any
    
    environment {
        PYTHONUNBUFFERED = '1'
        DJANGO_SETTINGS_MODULE = 'ecommerce.settings'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Explore Project') {
            steps {
                sh '''
                    echo "=== Project Structure ==="
                    ls -la ecommerce/
                    echo "=== Python Environment ==="
                    python3 --version
                    pip3 --version
                '''
            }
        }
        
        stage('Setup Python Environment') {
            steps {
                sh '''
                    cd ecommerce
                    echo "=== Creating Virtual Environment ==="
                    python3 -m venv venv
                    echo "=== Virtual Environment Created ==="
                    
                    # Use . instead of source for sh shell
                    . venv/bin/activate
                    echo "=== Virtual Environment Activated ==="
                    
                    pip install --upgrade pip
                    echo "=== Pip Upgraded ==="
                '''
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    cd ecommerce
                    # Activate virtual environment using . (dot) command
                    . venv/bin/activate
                    echo "=== Installing Requirements ==="
                    pip install -r requirements.txt
                    echo "=== Dependencies Installed ==="
                '''
            }
        }
        
        stage('Database Checks') {
            steps {
                sh '''
                    cd ecommerce
                    # Activate virtual environment
                    . venv/bin/activate
                    echo "=== Django System Check ==="
                    python manage.py check --fail-level WARNING
                    
                    echo "=== Migration Check ==="
                    python manage.py makemigrations --check --dry-run
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                sh '''
                    cd ecommerce
                    # Activate virtual environment
                    . venv/bin/activate
                    echo "=== Running Tests ==="
                    python manage.py test --verbosity=2
                '''
            }
        }
    }
    
    post {
        always {
            echo "=== Pipeline Complete ==="
        }
        success {
            echo "✅ Ecommerce CI Pipeline Succeeded!"
        }
        failure {
            echo "❌ Ecommerce CI Pipeline Failed!"
        }
    }
}